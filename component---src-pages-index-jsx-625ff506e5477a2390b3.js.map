{"version":3,"sources":["webpack:///./node_modules/lodash/map.js","webpack:///./src/images/profile.png","webpack:///./src/components/SideTagList/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/Bio/index.jsx"],"names":["arrayMap","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","RelativeWrapper","styled","div","Wrapper","aside","props","theme","colors","tertiaryText","Title","TagList","ul","Tag","li","text","SideTagList","tags","postCount","tag","to","fieldValue","totalCount","Space","BlogIndex","data","posts","allMarkdownRemark","nodes","group","reverse","length","Layout","SEO","title","description","url","siteUrl","Bio","Divider","PostList","postList","BioWrapper","Profile","ProfileImage","Author","Description","secondaryText","LinksWrapper","icon","Link","link","children","href","target","rel","github","links","kaggle","instagram","facebook","linkedIn","email","etc","id","author"],"mappings":"gFAAA,IAAIA,EAAW,EAAQ,QACnBC,EAAe,EAAQ,QACvBC,EAAU,EAAQ,QAClBC,EAAU,EAAQ,QAiDtBC,EAAOC,QALP,SAAaC,EAAYC,GAEvB,OADWJ,EAAQG,GAAcN,EAAWE,GAChCI,EAAYL,EAAaM,EAAU,M,uBCjDjDH,EAAOC,QAAU,IAA0B,uD,oLCKrCG,EAAkBC,IAAOC,IAAV,mFAAGD,CAAH,wBAIfE,EAAUF,IAAOG,MAAV,2EAAGH,CAAH,mKAOF,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,gBASjCC,EAAQR,IAAOC,IAAV,yEAAGD,CAAH,0CAKLS,EAAUT,IAAOU,GAAV,2EAAGV,CAAH,MAEPW,EAAMX,IAAOY,GAAV,uEAAGZ,CAAH,2HAMI,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,QA6B1BC,EApBK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC3B,OACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACM,EAAD,iBACA,kBAACC,EAAD,KACE,kBAACE,EAAD,aAAWK,EAAX,KACC,IAAMD,GAAM,SAAAE,GAAG,OACd,kBAACN,EAAD,KACE,kBAAC,OAAD,CAAMO,GAAE,WAAaD,EAAIE,YACtBF,EAAIE,WADP,KACqBF,EAAIG,WADzB,a,wBC1CRC,EAAQrB,IAAOC,IAAV,mEAAGD,CAAH,kBA8BIsB,UA1BG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BX,EAAO,IAASQ,EAAKE,kBAAkBE,MAAO,CAAC,eAAeC,UAEpE,OAAqB,IAAjBJ,EAAMK,OAEN,wLASF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAOA,QAAOC,YAAaA,cAAaC,IAAKC,YAClD,kBAACd,EAAD,MACA,kBAACe,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,CAAatB,KAAMA,EAAMC,UAAWQ,EAAMK,SAC1C,kBAACS,EAAA,EAAD,CAAUC,SAAUf,O,kCCvC1B,kFAiBMgB,EAAaxC,IAAOC,IAAV,qEAAGD,CAAH,+EASVyC,EAAUzC,IAAOC,IAAV,kEAAGD,CAAH,2JAMa0C,KAKpBC,EAAS3C,IAAOC,IAAV,iEAAGD,CAAH,sEAID,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,QAGjC+B,EAAc5C,IAAOC,IAAV,sEAAGD,CAAH,oEAIN,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOuC,iBAGjCC,EAAe9C,IAAOC,IAAV,uEAAGD,CAAH,uJAYN,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,OAAOyC,QAK5B,SAAA3C,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,QAIlCmC,EAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpB,OAAKD,EAEH,uBAAGE,KAAMF,EAAMG,OAAO,SAASC,IAAI,cAChCH,GAHa,MA6CLd,IArCH,WACV,IAAQkB,EAA8DC,QAA9DD,OAAQE,EAAsDD,QAAtDC,OAAQC,EAA8CF,QAA9CE,UAAWC,EAAmCH,QAAnCG,SAAUC,EAAyBJ,QAAzBI,SAAUC,EAAeL,QAAfK,MAAOC,EAAQN,QAARM,IAE9D,OACE,kBAACrB,EAAD,CAAYsB,GAAG,OACb,kBAACrB,EAAD,MACA,6BACE,kBAACE,EAAD,SAAUoB,UACV,kBAACnB,EAAD,KAAcX,eACd,kBAACa,EAAD,KACE,kBAACE,EAAD,CAAMC,KAAMK,GACV,kBAAC,IAAD,OAEF,kBAACN,EAAD,CAAMC,KAAMO,GACV,kBAAC,IAAD,OAEF,kBAACR,EAAD,CAAMC,KAAMQ,GACV,kBAAC,IAAD,OAEF,kBAACT,EAAD,CAAMC,KAAMS,GACV,kBAAC,IAAD,OAEF,kBAACV,EAAD,CAAMC,KAAMU,GACV,kBAAC,IAAD,OAEF,kBAACX,EAAD,CAAMC,KAAMW,GACV,kBAAC,IAAD,OAEF,kBAACZ,EAAD,CAAMC,KAAMY,GACV,kBAAC,IAAD","file":"component---src-pages-index-jsx-625ff506e5477a2390b3.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","module.exports = __webpack_public_path__ + \"static/profile-a3797e645e79b21302dc98c81ba92b2c.png\";","import React from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst RelativeWrapper = styled.div`\n  position: relative;\n`\n\nconst Wrapper = styled.aside`\n  position: absolute;\n  left: 112%;\n  top: 0px;\n  width: 200px;\n  height: 100px;\n  font-size: 16px;\n  color: ${props => props.theme.colors.tertiaryText};\n  opacity: 1;\n  transition: opacity 0.3s;\n\n  @media (max-width: 1300px) {\n    opacity: 0;\n  }\n`\n\nconst Title = styled.div`\n  margin-bottom: 25px;\n  font-weight: bold;\n`\n\nconst TagList = styled.ul``\n\nconst Tag = styled.li`\n  margin-bottom: 16px;\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.colors.text};\n  }\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n\nconst SideTagList = ({ tags, postCount }) => {\n  return (\n    <RelativeWrapper>\n      <Wrapper>\n        <Title>TAG LIST</Title>\n        <TagList>\n          <Tag>all ({postCount})</Tag>\n          {_.map(tags, tag => (\n            <Tag>\n              <Link to={`/tags?q=${tag.fieldValue}`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </Tag>\n          ))}\n        </TagList>\n      </Wrapper>\n    </RelativeWrapper>\n  )\n}\n\nexport default SideTagList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport Bio from \"components/Bio\"\nimport PostList from \"components/PostList\"\nimport SideTagList from \"components/SideTagList\"\nimport Divider from \"components/Divider\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\n\nconst Space = styled.div`\n  height: 3rem;\n`\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const tags = _.sortBy(data.allMarkdownRemark.group, [\"totalCount\"]).reverse()\n\n  if (posts.length === 0) {\n    return (\n      <p>\n        No blog posts found. Add markdown posts to &quot;content/blog&quot; (or\n        the directory you specified for the &quot;gatsby-source-filesystem&quot;\n        plugin in gatsby-config.js).\n      </p>\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <Space />\n      <Bio />\n      <Divider />\n      <SideTagList tags={tags} postCount={posts.length} />\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport ProfileImage from \"images/profile.png\"\n\nimport {\n  FaGithub,\n  FaKaggle,\n  FaFacebook,\n  FaLinkedin,\n  FaInstagram,\n  FaLink,\n  FaEnvelope,\n} from \"react-icons/fa\"\n\nimport { description, author, links } from \"../../../blog-config\"\n\nconst BioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst Profile = styled.div`\n  flex: 0 0 auto;\n  margin-right: 1rem;\n  width: 8rem;\n  height: 8rem;\n  border-radius: 999px;\n  background-image: url(${ProfileImage});\n  background-size: cover;\n  background-position: center;\n`\n\nconst Author = styled.div`\n  margin-bottom: 0.3rem;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${props => props.theme.colors.text};\n`\n\nconst Description = styled.div`\n  margin-bottom: 0.7rem;\n  line-height: 1.5;\n  font-size: 1rem;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst LinksWrapper = styled.div`\n  & a {\n    margin-right: 0.6rem;\n  }\n\n  & svg {\n    width: 1.6rem;\n    height: 1.6rem;\n    cursor: pointer;\n  }\n\n  & svg path {\n    fill: ${props => props.theme.colors.icon};\n    transition: fill 0.3s;\n  }\n\n  & a:hover svg path {\n    fill: ${props => props.theme.colors.text};\n  }\n`\n\nconst Link = ({ link, children }) => {\n  if (!link) return null\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nconst Bio = () => {\n  const { github, kaggle, instagram, facebook, linkedIn, email, etc } = links\n\n  return (\n    <BioWrapper id=\"bio\">\n      <Profile />\n      <div>\n        <Author>@{author}</Author>\n        <Description>{description}</Description>\n        <LinksWrapper>\n          <Link link={github}>\n            <FaGithub />\n          </Link>\n          <Link link={kaggle}>\n            <FaKaggle />\n          </Link>\n          <Link link={instagram}>\n            <FaInstagram />\n          </Link>\n          <Link link={facebook}>\n            <FaFacebook />\n          </Link>\n          <Link link={linkedIn}>\n            <FaLinkedin />\n          </Link>\n          <Link link={email}>\n            <FaEnvelope />\n          </Link>\n          <Link link={etc}>\n            <FaLink />\n          </Link>\n        </LinksWrapper>\n      </div>\n    </BioWrapper>\n  )\n}\n\nexport default Bio\n"],"sourceRoot":""}